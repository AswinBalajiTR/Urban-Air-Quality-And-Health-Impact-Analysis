# Some of common RMD options (and the defaults) are:
# include=T, eval=T, echo=T, results='hide'/'asis'/'markup',..., collapse=F, warning=T, message=T, error=T, cache=T, fig.width=6, fig.height=4, fig.dim=c(6,4) #inches, fig.align='left'/'center','right',
knitr::opts_chunk$set(warning = F, message = F)
# Can globally set option for number display format.
options(scientific=T, digits = 3)
# options(scipen=9, digits = 3)
#Converting required columns as a factor variable
df$conditions <- as.factor(df$conditions)
#Converting required columns as a factor variable
df$conditions <- as.factor(df$conditions)
# Some of common RMD options (and the defaults) are:
# include=T, eval=T, echo=T, results='hide'/'asis'/'markup',..., collapse=F, warning=T, message=T, error=T, cache=T, fig.width=6, fig.height=4, fig.dim=c(6,4) #inches, fig.align='left'/'center','right',
knitr::opts_chunk$set(warning = F, message = F)
# Can globally set option for number display format.
options(scientific=T, digits = 3)
# options(scipen=9, digits = 3)
library(dplyr)
library(ezids)
library(ggplot2)
library(tidyr)
library(reshape2)
library(gridExtra)
#loading the data
df=read.csv("air_quality_health_impact_data.csv")
head(df)
#Shape of the dataset
paste("Row Count:",dim(df)[1],"Column Count:",dim(df)[2])
#Structure of the dataset
str(df)
#summary of the dataset
summary(df)
#Converting required columns as a factor variable
df$conditions <- as.factor(df$conditions)
df$description <- as.factor(df$description)
df$icon <- as.factor(df$icon)
df$source <- as.factor(df$source)
df$City <- as.factor(df$City)
df$Month <- as.factor(df$Month)
df$Season <- as.factor(df$Season)
df$Day_of_Week <- as.factor(df$Day_of_Week)
df$Is_Weekend <- as.factor(df$Is_Weekend)
#Checking for datatype of every column
sapply(df, class)
# Some of common RMD options (and the defaults) are:
# include=T, eval=T, echo=T, results='hide'/'asis'/'markup',..., collapse=F, warning=T, message=T, error=T, cache=T, fig.width=6, fig.height=4, fig.dim=c(6,4) #inches, fig.align='left'/'center','right',
knitr::opts_chunk$set(warning = F, message = F)
# Can globally set option for number display format.
options(scientific=T, digits = 3)
# options(scipen=9, digits = 3)
library(dplyr)
library(ezids)
library(ggplot2)
library(tidyr)
library(reshape2)
library(gridExtra)
#loading the data
df=read.csv("air_quality_health_impact_data.csv")
head(df)
#Shape of the dataset
paste("Row Count:",dim(df)[1],"Column Count:",dim(df)[2])
#Structure of the dataset
str(df)
#Converting required columns as a factor variable
df$conditions <- as.factor(df$conditions)
df$description <- as.factor(df$description)
df$icon <- as.factor(df$icon)
df$source <- as.factor(df$source)
df$City <- as.factor(df$City)
df$Month <- as.factor(df$Month)
df$Season <- as.factor(df$Season)
df$Day_of_Week <- as.factor(df$Day_of_Week)
df$Is_Weekend <- as.factor(df$Is_Weekend)
#summary of the dataset
summary(df)
#Checking for unique values in all the columns
unique_counts <- sapply(df, function(x) length(unique(x)))
unique_counts
#Dropping the unwanted columns
df<- subset(df, select = -c(Season,Month,snow,snowdepth))
head(df)
dim(df)
#Converting required columns as a factor variable
df$conditions <- as.factor(df$conditions)
df$description <- as.factor(df$description)
df$icon <- as.factor(df$icon)
df$source <- as.factor(df$source)
df$City <- as.factor(df$City)
df$Month <- as.factor(df$Month)
# Some of common RMD options (and the defaults) are:
# include=T, eval=T, echo=T, results='hide'/'asis'/'markup',..., collapse=F, warning=T, message=T, error=T, cache=T, fig.width=6, fig.height=4, fig.dim=c(6,4) #inches, fig.align='left'/'center','right',
knitr::opts_chunk$set(warning = F, message = F)
# Can globally set option for number display format.
options(scientific=T, digits = 3)
# options(scipen=9, digits = 3)
library(dplyr)
library(ezids)
library(ggplot2)
library(tidyr)
library(reshape2)
library(gridExtra)
#loading the data
df=read.csv("air_quality_health_impact_data.csv")
head(df)
#Shape of the dataset
paste("Row Count:",dim(df)[1],"Column Count:",dim(df)[2])
#Structure of the dataset
str(df)
#Converting required columns as a factor variable
df$conditions <- as.factor(df$conditions)
df$description <- as.factor(df$description)
df$icon <- as.factor(df$icon)
df$source <- as.factor(df$source)
df$City <- as.factor(df$City)
df$Month <- as.factor(df$Month)
df$Season <- as.factor(df$Season)
df$Day_of_Week <- as.factor(df$Day_of_Week)
df$Is_Weekend <- as.factor(df$Is_Weekend)
#Converting required columns as a factor variable
df$conditions <- as.factor(df$conditions)
df$description <- as.factor(df$description)
df$icon <- as.factor(df$icon)
df$source <- as.factor(df$source)
df$City <- as.factor(df$City)
df$Month <- as.factor(df$Month)
df$Season <- as.factor(df$Season)
df$Day_of_Week <- as.factor(df$Day_of_Week)
df$Is_Weekend <- as.factor(df$Is_Weekend)
#Converting required columns as a factor variable
df$conditions <- as.factor(df$conditions)
df$description <- as.factor(df$description)
df$icon <- as.factor(df$icon)
df$source <- as.factor(df$source)
df$City <- as.factor(df$City)
df$Month <- as.factor(df$Month)
df$Season <- as.factor(df$Season)
df$Day_of_Week <- as.factor(df$Day_of_Week)
df$Is_Weekend <- as.factor(df$Is_Weekend)
#Checking for missing values
missing_values <- colSums(is.na(df))
print(missing_values)
